/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SuperSlot, SuperSlotInterface } from "../SuperSlot";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string[4]",
        name: "result",
        type: "string[4]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isWin",
        type: "bool",
      },
    ],
    name: "Spin",
    type: "event",
  },
  {
    inputs: [],
    name: "BET_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrizePool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSlots",
    outputs: [
      {
        internalType: "string[10]",
        name: "",
        type: "string[10]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prizePool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "slots",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spin",
    outputs: [
      {
        components: [
          {
            internalType: "string[4]",
            name: "symbols",
            type: "string[4]",
          },
          {
            internalType: "uint256",
            name: "winAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isWin",
            type: "bool",
          },
        ],
        internalType: "struct SuperSlot.SpinResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518061014001604052806040518060400160405280600481526020017f444f47450000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f534849424100000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600481526020017f504550450000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f574946000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600481526020017f424f4e4b0000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f464c4f4b4900000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f425245545400000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f4d4f47000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600481526020017f424f4d450000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f4d45570000000000000000000000000000000000000000000000000000000000815250815250600290600a6200026e929190620002c3565b503480156200027c57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000704565b82600a810192821562000303579160200282015b8281111562000302578251829081620002f191906200061d565b5091602001919060010190620002d7565b5b50905062000312919062000316565b5090565b5b808211156200033a57600081816200033091906200033e565b5060010162000317565b5090565b5080546200034c906200040c565b6000825580601f1062000360575062000381565b601f01602090049060005260206000209081019062000380919062000384565b5b50565b5b808211156200039f57600081600090555060010162000385565b5090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042557607f821691505b6020821081036200043b576200043a620003dd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000466565b620004b1868362000466565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004fe620004f8620004f284620004c9565b620004d3565b620004c9565b9050919050565b6000819050919050565b6200051a83620004dd565b62000532620005298262000505565b84845462000473565b825550505050565b600090565b620005496200053a565b620005568184846200050f565b505050565b5b818110156200057e57620005726000826200053f565b6001810190506200055c565b5050565b601f821115620005cd57620005978162000441565b620005a28462000456565b81016020851015620005b2578190505b620005ca620005c18562000456565b8301826200055b565b50505b505050565b600082821c905092915050565b6000620005f260001984600802620005d2565b1980831691505092915050565b60006200060d8383620005df565b9150826002028217905092915050565b6200062882620003a3565b67ffffffffffffffff811115620006445762000643620003ae565b5b6200065082546200040c565b6200065d82828562000582565b600060209050601f83116001811462000695576000841562000680578287015190505b6200068c8582620005ff565b865550620006fc565b601f198416620006a58662000441565b60005b82811015620006cf57848901518255600182019150602085019450602081019050620006a8565b86831015620006ef5784890151620006eb601f891682620005df565b8355505b6001600288020188555050505b505050505050565b61110a80620007146000396000f3fe6080604052600436106100705760003560e01c8063884bf67c1161004e578063884bf67c146101085780638da5cb5b14610133578063f0acd7d51461015e578063fab2c4691461017c57610070565b8063387dd9e9146100755780633f9326af146100b2578063719ce73e146100dd575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061088b565b6101a7565b6040516100a99190610948565b60405180910390f35b3480156100be57600080fd5b506100c761024a565b6040516100d49190610979565b60405180910390f35b3480156100e957600080fd5b506100f2610255565b6040516100ff9190610979565b60405180910390f35b34801561011457600080fd5b5061011d61025b565b60405161012a9190610979565b60405180910390f35b34801561013f57600080fd5b50610148610265565b60405161015591906109d5565b60405180910390f35b610166610289565b6040516101739190610b6a565b60405180910390f35b34801561018857600080fd5b506101916106e9565b60405161019e9190610c2e565b60405180910390f35b600281600a81106101b757600080fd5b0160009150905080546101c990610c7f565b80601f01602080910402602001604051908101604052809291908181526020018280546101f590610c7f565b80156102425780601f1061021757610100808354040283529160200191610242565b820191906000526020600020905b81548152906001019060200180831161022557829003601f168201915b505050505081565b66038d7ea4c6800081565b60015481565b6000600154905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102916107b6565b66038d7ea4c6800034146102da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d190610cfc565b60405180910390fd5b60006064600a346102eb9190610d4b565b6102f59190610dbc565b9050600081346103059190610ded565b905080600160008282546103199190610e21565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610386573d6000803e3d6000fd5b5061038f6107df565b610397610806565b60005b60048110156104de57600a424433846040516020016103bc9493929190610ebe565b6040516020818303038152906040528051906020012060001c6103df9190610f0c565b8282600481106103f2576103f1610f3d565b5b60200201818152505060028282600481106104105761040f610f3d565b5b6020020151600a811061042657610425610f3d565b5b01805461043290610c7f565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90610c7f565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b50505050508382600481106104c3576104c2610f3d565b5b602002018190525080806104d690610f6c565b91505061039a565b50600080836001600481106104f6576104f5610f3d565b5b602002015160405160200161050b9190610ff0565b604051602081830303815290604052805190602001208460006004811061053557610534610f3d565b5b602002015160405160200161054a9190610ff0565b604051602081830303815290604052805190602001201480156105e857508360026004811061057c5761057b610f3d565b5b60200201516040516020016105919190610ff0565b60405160208183030381529060405280519060200120846001600481106105bb576105ba610f3d565b5b60200201516040516020016105d09190610ff0565b60405160208183030381529060405280519060200120145b1561066f57606460506001546105fe9190610d4b565b6106089190610dbc565b9150816001600082825461061c9190610ded565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610669573d6000803e3d6000fd5b50600190505b3373ffffffffffffffffffffffffffffffffffffffff167f6618017e9c3865c5658f7940e535e1614c4262172ad7c0debb697058a5b0f5098584846040516106b993929190611096565b60405180910390a26040518060600160405280858152602001838152602001821515815250965050505050505090565b6106f1610828565b6002600a80602002604051908101604052809291906000905b828210156107ad57838201805461072090610c7f565b80601f016020809104026020016040519081016040528092919081815260200182805461074c90610c7f565b80156107995780601f1061076e57610100808354040283529160200191610799565b820191906000526020600020905b81548152906001019060200180831161077c57829003601f168201915b50505050508152602001906001019061070a565b50505050905090565b60405180606001604052806107c96107df565b8152602001600081526020016000151581525090565b60405180608001604052806004905b60608152602001906001900390816107ee5790505090565b6040518060800160405280600490602082028036833780820191505090505090565b604051806101400160405280600a905b60608152602001906001900390816108385790505090565b600080fd5b6000819050919050565b61086881610855565b811461087357600080fd5b50565b6000813590506108858161085f565b92915050565b6000602082840312156108a1576108a0610850565b5b60006108af84828501610876565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108f25780820151818401526020810190506108d7565b60008484015250505050565b6000601f19601f8301169050919050565b600061091a826108b8565b61092481856108c3565b93506109348185602086016108d4565b61093d816108fe565b840191505092915050565b60006020820190508181036000830152610962818461090f565b905092915050565b61097381610855565b82525050565b600060208201905061098e600083018461096a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109bf82610994565b9050919050565b6109cf816109b4565b82525050565b60006020820190506109ea60008301846109c6565b92915050565b600060049050919050565b600081905092915050565b6000819050919050565b600082825260208201905092915050565b6000610a2c826108b8565b610a368185610a10565b9350610a468185602086016108d4565b610a4f816108fe565b840191505092915050565b6000610a668383610a21565b905092915050565b6000602082019050919050565b6000610a86826109f0565b610a9081856109fb565b935083602082028501610aa285610a06565b8060005b85811015610ade5784840389528151610abf8582610a5a565b9450610aca83610a6e565b925060208a01995050600181019050610aa6565b50829750879550505050505092915050565b610af981610855565b82525050565b60008115159050919050565b610b1481610aff565b82525050565b60006060830160008301518482036000860152610b378282610a7b565b9150506020830151610b4c6020860182610af0565b506040830151610b5f6040860182610b0b565b508091505092915050565b60006020820190508181036000830152610b848184610b1a565b905092915050565b6000600a9050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6000610bc482610b8c565b610bce8185610b97565b935083602082028501610be085610ba2565b8060005b85811015610c1c5784840389528151610bfd8582610a5a565b9450610c0883610bac565b925060208a01995050600181019050610be4565b50829750879550505050505092915050565b60006020820190508181036000830152610c488184610bb9565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c9757607f821691505b602082108103610caa57610ca9610c50565b5b50919050565b7f496e636f72726563742062657420616d6f756e74000000000000000000000000600082015250565b6000610ce66014836108c3565b9150610cf182610cb0565b602082019050919050565b60006020820190508181036000830152610d1581610cd9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5682610855565b9150610d6183610855565b9250828202610d6f81610855565b91508282048414831517610d8657610d85610d1c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dc782610855565b9150610dd283610855565b925082610de257610de1610d8d565b5b828204905092915050565b6000610df882610855565b9150610e0383610855565b9250828203905081811115610e1b57610e1a610d1c565b5b92915050565b6000610e2c82610855565b9150610e3783610855565b9250828201905080821115610e4f57610e4e610d1c565b5b92915050565b6000819050919050565b610e70610e6b82610855565b610e55565b82525050565b60008160601b9050919050565b6000610e8e82610e76565b9050919050565b6000610ea082610e83565b9050919050565b610eb8610eb3826109b4565b610e95565b82525050565b6000610eca8287610e5f565b602082019150610eda8286610e5f565b602082019150610eea8285610ea7565b601482019150610efa8284610e5f565b60208201915081905095945050505050565b6000610f1782610855565b9150610f2283610855565b925082610f3257610f31610d8d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610f7782610855565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fa957610fa8610d1c565b5b600182019050919050565b600081905092915050565b6000610fca826108b8565b610fd48185610fb4565b9350610fe48185602086016108d4565b80840191505092915050565b6000610ffc8284610fbf565b915081905092915050565b600081905092915050565b600061101d826109f0565b6110278185611007565b93508360208202850161103985610a06565b8060005b8581101561107557848403895281516110568582610a5a565b945061106183610a6e565b925060208a0199505060018101905061103d565b50829750879550505050505092915050565b61109081610aff565b82525050565b600060608201905081810360008301526110b08186611012565b90506110bf602083018561096a565b6110cc6040830184611087565b94935050505056fea2646970667358221220061580d35d926b45e85e9fa2117dba5dac5a180cbb7bcc8b0bfe296614e9c80964736f6c63430008130033";

type SuperSlotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuperSlotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuperSlot__factory extends ContractFactory {
  constructor(...args: SuperSlotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SuperSlot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SuperSlot__factory {
    return super.connect(runner) as SuperSlot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuperSlotInterface {
    return new Interface(_abi) as SuperSlotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SuperSlot {
    return new Contract(address, _abi, runner) as unknown as SuperSlot;
  }
}
