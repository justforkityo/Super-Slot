{"ast":null,"code":"var _jsxFileName = \"/Users/f.f/Contracts/my-dapp/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport SuperSlotArtifact from './artifacts/SuperSlot.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x6da2F4963E3c936DfF4cea3a9a6C521807895C6E\";\nfunction App() {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [prizePool, setPrizePool] = useState('0');\n  const [slots, setSlots] = useState(['?', '?', '?', '?']);\n  const [spinning, setSpinning] = useState(false);\n  const [error, setError] = useState(null);\n  const [allSlots, setAllSlots] = useState([]);\n  const [balance, setBalance] = useState('0');\n  const [signer, setSigner] = useState(null);\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [spinResult, setSpinResult] = useState(null);\n  useEffect(() => {\n    const init = async () => {\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const accounts = await provider.listAccounts();\n          if (accounts.length > 0) {\n            await connectWallet();\n          }\n        } catch (err) {\n          setError('Failed to connect to Ethereum network');\n          console.error(err);\n        }\n      } else {\n        setError('Ethereum wallet not detected');\n      }\n    };\n    init();\n  }, []);\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signerInstance = await provider.getSigner();\n        setSigner(signerInstance);\n        const address = await signerInstance.getAddress();\n        setWalletAddress(address);\n        const contractInstance = new ethers.Contract(CONTRACT_ADDRESS, SuperSlotArtifact.abi, signerInstance);\n        setContract(contractInstance);\n        await updatePrizePool(contractInstance);\n        await fetchAllSlots(contractInstance);\n        await updateBalance(signerInstance);\n      } catch (err) {\n        setError('Failed to connect wallet');\n        console.error(err);\n      }\n    } else {\n      setError('Ethereum wallet not detected');\n    }\n  };\n  const disconnectWallet = () => {\n    setSigner(null);\n    setWalletAddress(null);\n    setContract(null);\n    setBalance('0');\n    setShowDropdown(false);\n  };\n  const updatePrizePool = async contractInstance => {\n    try {\n      const pool = await contractInstance.getPrizePool();\n      setPrizePool(ethers.formatEther(pool));\n    } catch (err) {\n      console.error('Failed to fetch prize pool:', err);\n    }\n  };\n  const fetchAllSlots = async contractInstance => {\n    try {\n      const slots = await contractInstance.getSlots();\n      setAllSlots(slots);\n    } catch (err) {\n      console.error('Failed to fetch slot symbols:', err);\n    }\n  };\n  const updateBalance = async signerInstance => {\n    try {\n      const provider = signerInstance.provider;\n      if (!provider) {\n        throw new Error(\"No provider available\");\n      }\n      const address = await signerInstance.getAddress();\n      const balance = await provider.getBalance(address);\n      setBalance(ethers.formatEther(balance));\n    } catch (err) {\n      console.error('Failed to update balance:', err);\n    }\n  };\n  const spin = async () => {\n    if (contract && signer) {\n      try {\n        setSpinning(true);\n        setSlots(['?', '?', '?', '?']);\n        setSpinResult(null);\n        setError(null);\n        const tx = await contract.spin({\n          value: ethers.parseEther('0.001')\n        });\n        const receipt = await tx.wait();\n        const event = receipt.logs.find(log => log.fragment.name === 'Spin');\n        if (event && event.args) {\n          const result = {\n            symbols: event.args.result,\n            winAmount: event.args.winAmount,\n            isWin: event.args.isWin\n          };\n          simulateSpinning(result);\n        } else {\n          throw new Error('Spin event not found in transaction receipt');\n        }\n      } catch (err) {\n        console.error('Failed to spin:', err);\n        setError('Failed to spin. Please try again.');\n        setSpinning(false);\n      }\n    }\n  };\n  const simulateSpinning = result => {\n    let spins = 0;\n    const spinInterval = setInterval(() => {\n      setSlots(slots.map(() => allSlots[Math.floor(Math.random() * allSlots.length)]));\n      spins++;\n      if (spins >= 20) {\n        clearInterval(spinInterval);\n        setSlots(result.symbols);\n        setSpinning(false);\n        if (contract) {\n          updatePrizePool(contract);\n        }\n        if (signer) {\n          updateBalance(signer);\n        }\n        if (result.isWin) {\n          playWinSound();\n          setSpinResult(`Congratulations! You won ${ethers.formatEther(result.winAmount)} ETH!`);\n        } else {\n          setSpinResult('Better luck next time!');\n        }\n      }\n    }, 100);\n  };\n  const playWinSound = () => {\n    const audio = new Audio('/win-sound.mp3');\n    audio.play().catch(err => console.error('Failed to play sound:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Super Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [balance !== '0' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balance\",\n          children: [\"Balance: \", Number(balance).toFixed(4), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 31\n        }, this), walletAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-address-container\",\n          onMouseEnter: () => setShowDropdown(true),\n          onMouseLeave: () => setShowDropdown(false),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-address\",\n            children: [walletAddress.slice(0, 6), \"...\", walletAddress.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: disconnectWallet,\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect-button\",\n          onClick: connectWallet,\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prize-pool\",\n          children: [\"Prize Pool: \", prizePool, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), spinResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spin-result\",\n          children: spinResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slot-machine\",\n          children: slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `slot ${spinning ? 'spinning' : ''}`,\n            children: slot\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: spin,\n          disabled: spinning || !signer,\n          className: spinning ? 'spinning' : '',\n          children: spinning ? 'Spinning...' : 'Spin (0.001 ETH)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6LFUB0BcTIEbEsQy4ZCtBZVZCsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","SuperSlotArtifact","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","App","_s","contract","setContract","prizePool","setPrizePool","slots","setSlots","spinning","setSpinning","error","setError","allSlots","setAllSlots","balance","setBalance","signer","setSigner","walletAddress","setWalletAddress","showDropdown","setShowDropdown","spinResult","setSpinResult","init","window","ethereum","provider","BrowserProvider","accounts","listAccounts","length","connectWallet","err","console","request","method","signerInstance","getSigner","address","getAddress","contractInstance","Contract","abi","updatePrizePool","fetchAllSlots","updateBalance","disconnectWallet","pool","getPrizePool","formatEther","getSlots","Error","getBalance","spin","tx","value","parseEther","receipt","wait","event","logs","find","log","fragment","name","args","result","symbols","winAmount","isWin","simulateSpinning","spins","spinInterval","setInterval","map","Math","floor","random","clearInterval","playWinSound","audio","Audio","play","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Number","toFixed","onMouseEnter","onMouseLeave","slice","onClick","slot","index","disabled","_c","$RefreshReg$"],"sources":["/Users/f.f/Contracts/my-dapp/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport SuperSlotArtifact from './artifacts/SuperSlot.json';\nimport './App.css';\n\nconst CONTRACT_ADDRESS = \"0x6da2F4963E3c936DfF4cea3a9a6C521807895C6E\";\n\ninterface SpinResult {\n  symbols: string[];\n  winAmount: bigint;\n  isWin: boolean;\n}\n\nfunction App() {\n  const [contract, setContract] = useState<ethers.Contract | null>(null);\n  const [prizePool, setPrizePool] = useState<string>('0');\n  const [slots, setSlots] = useState<string[]>(['?', '?', '?', '?']);\n  const [spinning, setSpinning] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [allSlots, setAllSlots] = useState<string[]>([]);\n  const [balance, setBalance] = useState<string>('0');\n  const [signer, setSigner] = useState<ethers.Signer | null>(null);\n  const [walletAddress, setWalletAddress] = useState<string | null>(null);\n  const [showDropdown, setShowDropdown] = useState<boolean>(false);\n  const [spinResult, setSpinResult] = useState<string | null>(null);\n\n  useEffect(() => {\n    const init = async () => {\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const accounts = await provider.listAccounts();\n          if (accounts.length > 0) {\n            await connectWallet();\n          }\n        } catch (err) {\n          setError('Failed to connect to Ethereum network');\n          console.error(err);\n        }\n      } else {\n        setError('Ethereum wallet not detected');\n      }\n    };\n    init();\n  }, []);\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signerInstance = await provider.getSigner();\n        setSigner(signerInstance);\n        const address = await signerInstance.getAddress();\n        setWalletAddress(address);\n        const contractInstance = new ethers.Contract(CONTRACT_ADDRESS, SuperSlotArtifact.abi, signerInstance);\n        setContract(contractInstance);\n        await updatePrizePool(contractInstance);\n        await fetchAllSlots(contractInstance);\n        await updateBalance(signerInstance);\n      } catch (err) {\n        setError('Failed to connect wallet');\n        console.error(err);\n      }\n    } else {\n      setError('Ethereum wallet not detected');\n    }\n  };\n\n  const disconnectWallet = () => {\n    setSigner(null);\n    setWalletAddress(null);\n    setContract(null);\n    setBalance('0');\n    setShowDropdown(false);\n  };\n\n  const updatePrizePool = async (contractInstance: ethers.Contract) => {\n    try {\n      const pool = await contractInstance.getPrizePool();\n      setPrizePool(ethers.formatEther(pool));\n    } catch (err) {\n      console.error('Failed to fetch prize pool:', err);\n    }\n  };\n\n  const fetchAllSlots = async (contractInstance: ethers.Contract) => {\n    try {\n      const slots = await contractInstance.getSlots();\n      setAllSlots(slots);\n    } catch (err) {\n      console.error('Failed to fetch slot symbols:', err);\n    }\n  };\n\n  const updateBalance = async (signerInstance: ethers.Signer) => {\n    try {\n      const provider = signerInstance.provider;\n      if (!provider) {\n        throw new Error(\"No provider available\");\n      }\n      const address = await signerInstance.getAddress();\n      const balance = await provider.getBalance(address);\n      setBalance(ethers.formatEther(balance));\n    } catch (err) {\n      console.error('Failed to update balance:', err);\n    }\n  };\n\n  const spin = async () => {\n    if (contract && signer) {\n      try {\n        setSpinning(true);\n        setSlots(['?', '?', '?', '?']);\n        setSpinResult(null);\n        setError(null);\n        const tx = await contract.spin({ value: ethers.parseEther('0.001') });\n        const receipt = await tx.wait();\n        const event = receipt.logs.find((log: any) => log.fragment.name === 'Spin');\n        if (event && event.args) {\n          const result: SpinResult = {\n            symbols: event.args.result,\n            winAmount: event.args.winAmount,\n            isWin: event.args.isWin\n          };\n          simulateSpinning(result);\n        } else {\n          throw new Error('Spin event not found in transaction receipt');\n        }\n      } catch (err) {\n        console.error('Failed to spin:', err);\n        setError('Failed to spin. Please try again.');\n        setSpinning(false);\n      }\n    }\n  };\n\n  const simulateSpinning = (result: SpinResult) => {\n    let spins = 0;\n    const spinInterval = setInterval(() => {\n      setSlots(slots.map(() => allSlots[Math.floor(Math.random() * allSlots.length)]));\n      spins++;\n      if (spins >= 20) {\n        clearInterval(spinInterval);\n        setSlots(result.symbols);\n        setSpinning(false);\n        if (contract) {\n          updatePrizePool(contract);\n        }\n        if (signer) {\n          updateBalance(signer);\n        }\n        if (result.isWin) {\n          playWinSound();\n          setSpinResult(`Congratulations! You won ${ethers.formatEther(result.winAmount)} ETH!`);\n        } else {\n          setSpinResult('Better luck next time!');\n        }\n      }\n    }, 100);\n  };\n\n  const playWinSound = () => {\n    const audio = new Audio('/win-sound.mp3');\n    audio.play().catch(err => console.error('Failed to play sound:', err));\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Super Slot</h1>\n        <div className=\"wallet-info\">\n          {balance !== '0' && <div className=\"balance\">Balance: {Number(balance).toFixed(4)} ETH</div>}\n          {walletAddress ? (\n            <div \n              className=\"wallet-address-container\" \n              onMouseEnter={() => setShowDropdown(true)}\n              onMouseLeave={() => setShowDropdown(false)}\n            >\n              <div className=\"wallet-address\">\n                {walletAddress.slice(0, 6)}...{walletAddress.slice(-4)}\n              </div>\n              {showDropdown && (\n                <div className=\"dropdown\">\n                  <button onClick={disconnectWallet}>Disconnect</button>\n                </div>\n              )}\n            </div>\n          ) : (\n            <button className=\"connect-button\" onClick={connectWallet}>\n              Connect Wallet\n            </button>\n          )}\n        </div>\n      </header>\n      <main>\n        <div className=\"game-container\">\n          <div className=\"prize-pool\">Prize Pool: {prizePool} ETH</div>\n          {spinResult && <div className=\"spin-result\">{spinResult}</div>}\n          <div className=\"slot-machine\">\n            {slots.map((slot, index) => (\n              <div key={index} className={`slot ${spinning ? 'spinning' : ''}`}>\n                {slot}\n              </div>\n            ))}\n          </div>\n          <button onClick={spin} disabled={spinning || !signer} className={spinning ? 'spinning' : ''}>\n            {spinning ? 'Spinning...' : 'Spin (0.001 ETH)'}\n          </button>\n          {error && <p className=\"error\">{error}</p>}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}